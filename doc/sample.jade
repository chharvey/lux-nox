extends ../index-tpl.jade

block append vars
  - page_names.push('Sample')
  - home_path = '../'

block append body
  -
    var preset = {
      solarized_dark: createTheme({
        mode: 'dark'
      , bg_scheme: 'Solarized'
      , fg_scheme: 'Solarized'
      , ac_scheme: 'Solarized'
      })
    , solarized_light: createTheme({
        mode: 'light'
      , bg_scheme: 'Solarized'
      , fg_scheme: 'Solarized'
      , ac_scheme: 'Solarized'
      })
    , lunarized_dark: createTheme({
        mode: 'dark'
      , bg_scheme: 'Solarized'
      , fg_scheme: 'Solarized'
      , ac_scheme: 'Solarized'
      })
    , lunarized_light: createTheme({
        mode: 'light'
      , bg_scheme: 'Solarized'
      , fg_scheme: 'Solarized'
      , ac_scheme: 'Solarized'
      })
    }
  script.
    var my_theme = !{JSON.stringify(preset.solarized_light)}
    $('.js-theme').addClass(my_theme.bg.class + ' ' + my_theme.text.class)
    $('.js-ctl').addClass(my_theme.red.class)
    $('.js-opr').addClass(my_theme.orange.class)
    $('.js-kwd').addClass(my_theme.yellow.class)
    $('.js-cst').addClass(my_theme.green.class)
    $('.js-str').addClass(my_theme.cyan.class)
    $('.js-cmd').addClass(my_theme.blue.class)
    $('.js-arg').addClass(my_theme.purple1.class)
    $('.js-obj').addClass(my_theme.purple2.class)
  //- script.
    var scheme = !{JSON.stringify(scheme)}
    var createTheme = #{createTheme}
    $('.check').change(function () {
      var section = $(this).closest('section.o-Box')
      var mode = section.attr('data-mode')
      var bg_scheme = section.attr('data-bg_scheme')
      var fg_scheme = section.attr('data-fg_scheme')
      var ac_scheme = section.attr('data-ac_scheme')
      var invert = {
        'modes': {
          'dark': 'light'
        , 'light': 'dark'
        }
      , 'schemes': {
          'Solarized': 'Lunarized'
        , 'Lunarized': 'Solarized'
        }
      }
      var bg_scheme_invert = invert.schemes[bg_scheme]
      var fg_scheme_invert = invert.schemes[fg_scheme]
      var ac_scheme_invert = invert.schemes[ac_scheme]
      section.removeClass(bases[fg_scheme][mode].text.class + ' ' + bases[fg_scheme_invert][mode].text.class)
      var children = {
        emphs: section.find('.' + bases[fg_scheme][mode].emph.class + ', ' + '.' + bases[fg_scheme_invert][mode].emph.class)
      , deemphs: section.find('.' + bases[fg_scheme][mode].deemph.class + ', ' + '.' + bases[fg_scheme_invert][mode].deemph.class)
      }
      children.emphs.removeClass(bases[fg_scheme][mode].emph.class + ' ' + bases[fg_scheme_invert][mode].emph.class)
      children.deemphs.removeClass(bases[fg_scheme][mode].deemph.class + ' ' + bases[fg_scheme_invert][mode].deemph.class)
      if (this.checked) {
        section.addClass(bases[fg_scheme_invert][mode].text.class)
        children.emphs.addClass(bases[fg_scheme_invert][mode].emph.class)
        children.deemphs.addClass(bases[fg_scheme_invert][mode].deemph.class)
      } else {
        section.addClass(bases[fg_scheme][mode].text.class)
        children.emphs.addClass(bases[fg_scheme][mode].emph.class)
        children.deemphs.addClass(bases[fg_scheme][mode].deemph.class)
      }
    })

block append main
  //- input.check(style="margin-left: 0.5em;" type="checkbox" name="switch-theme" value="")
  pre.o-Box.js-theme.
    #[span.js-cmd &lt;tag #[span.js-kwd attribute=#[span.js-str &quot;value value&quot;]]&gt;]content #[span.js-cst &amp;amp;] more#[span.js-cmd &lt;#{'/'}tag&gt;]
    #[small.js-deemph &lt;!-- HTML comment --&gt;]
    #[span.js-cmd &lt;style #[span.js-kwd scoped]&gt;]
      #[small.js-deemph /* block comment */]
      element,
      #[span.js-cmd .class] #[span.js-opr= '{']
        #[small.js-deemph #{'//'} inline comment]
        #[span.js-kwd property]: #[span.js-str value];
        #[span.js-kwd property]: #[span.js-cst 48px];
        #[span.js-cmd .command(#[span.js-arg argument, #[span.js-obj 'string']])];
        #[strong.js-emph.js-hilite &amp;#[span.js-ctl :pseudo] #[span.js-opr= '{'] #[span.js-kwd property]: #[span.js-str value]; #[span.js-opr= '}']]
      #[span.js-opr= '}']
    #[span.js-cmd &lt;#{'/'}style&gt;]
    #[span.js-cmd &lt;script&gt;]
      #[span.js-kwd function] #[span.js-cmd Person(#[span.js-arg name])] #[span.js-opr= '{'] #[small.js-deemph #{'//'} constructor for class `Person`]
        #[span.js-obj this].greetings #[span.js-opr =] #[span.js-opr #{'['}] #[span.js-str 'hello!']#[span.js-opr ,] #[span.js-str 'hi!']#[span.js-opr ,] handshake #[span.js-opr #{']'}];
      #[span.js-opr= '}']
      #[span.js-kwd function] #[span.js-cmd TestSubject(#[span.js-arg name#[span.js-opr ,] adopted])] #[span.js-opr= '{'] #[small.js-deemph #{'//'} constructor for class `TestSubject`]
        #[span.js-obj Person]#[span.js-cmd .call(#[span.js-arg #[span.js-obj this]#[span.js-opr ,] name#[span.js-opr ,] adopted])]; #[small.js-deemph #{'//'} calls the parent constructor]
        #[span.js-ctl if (#[span.js-opr typeof] #[span.js-arg adopted] #[span.js-opr ===] #[span.js-str 'boolean'])] #[span.js-opr= '{']
          #[strong.js-emph.js-hilite #[span.js-obj this].is_adopted #[span.js-opr =] #[span.js-arg adopted];]
        #[span.js-opr= '}'] #[span.js-ctl else] #[span.js-obj this].is_adopted #[span.js-opr =] #[span.js-cst false];
      #[span.js-opr= '}']
      #[span.js-obj this].location #[span.js-opr =] #[span.js-opr #{'{'}] name#[span.js-opr :] #[span.js-str 'Aperture Science Enrichment Center'] #[span.js-opr #{'}'}]
      #[span.js-obj Util]#[span.js-cmd .extend(#[span.js-arg #[span.js-obj TestSubject]#[span.js-opr ,] #[span.js-obj Person]])]; #[small.js-deemph #{'//'} extends `TestSubject` from `Person`]
      #[span.js-kwd var] you #[span.js-opr =] #[span.js-opr new] #[span.js-cmd TestSubject(#[span.js-arg #[span.js-str 'Chell']#[span.js-opr ,] #[span.js-cst true]])]; #[small.js-deemph #{'//'} creates an instance of `TestSubject`]
    #[span.js-cmd &lt;#{'/'}script&gt;]
